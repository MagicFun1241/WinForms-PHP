Form MainForm ():
    size: [$SCREEN->width / 1.2, $SCREEN->height / 1.2]
    windowState: fwsMaximized
    startPosition: fspCenterScreen
    backgroundColor: clWhite
    doubleBoffer: true
    formBorderStyle: bsFixedSingle

    caption: 'VoidStudio'

    ->icon->loadFromFile (WORKSPACE. '/Icon.ico')

TabPage Log__Page ():
    text: text ('Лог')

TabPage EvalTool_Page ():
    text: text ('Выполнение кода')

TabControl BottomPanel (MainForm):
    dock: dsBottom
    height: 160

    ->tabPages->addRange ([Log__Page, EvalTool_Page])

ListBox Log__List (Log__Page):
    dock: dsFill

    font: ['Microsoft Sans Serif', 9]

FastColoredTextBox EvalTool_Editor (EvalTool_Page):
    dock: dsFill

    language: langPHP
    wordWrap: true

Button EvalTool_Eval (EvalTool_Page):
    dock: dsBottom
    caption: text ('Выполнить')

    ClickEvent:^ function ($self) use (EvalTool_Editor $editor)
        {
            eval ($editor->text);
        }

Panel LeftMenu__Panel (MainForm):
    dock: dsLeft
    width: 280

TabPage LeftMenu__Properties ():
    text: text ('Свойства')

TabPage LeftMenu__Events ():
    text: text ('События')

TabControl LeftMenu (LeftMenu__Panel):
    dock: dsFill

    ->tabPages->addRange ([LeftMenu__Properties, LeftMenu__Events])

PropertyGrid PropertiesList (LeftMenu__Properties):
    dock: dsFill

VoidDesigner Designer (MainForm, PropertiesList):

ListBox LeftMenu__EventsList (LeftMenu__Events):
    dock: dsFill

    font: ['Microsoft Sans Serif', 9]

    DoubleClickEvent:^ function ($self) use (PropertiesList $propertyGrid)
        {
            VoidStudioAPI::openEventEditor (Components::getComponent ($propertyGrid->selectedObject), $self->selected);
        }

ComboBox Objects (LeftMenu__Panel):
    dock: dsTop
    dropDownStyle: ddDropDownList

    SelectedIndexChangedEvent:^ function ($self) use (PropertiesList $propertyGrid)
        {
            $item = $self->selectedItem;

            $propertyGrid->selectedObject = substr ($item, 1, strpos ($item, ']') - 1);
        }

%^  PropertiesList->selectedObject = Designer->form;
    Objects->items->add ('['. Designer->form .'] Form');

ColumnHeader ComponentsColumn ():
    text: text ('Название компонента')
    width: 216

ListView ComponentsList (MainForm):
    dock: dsRight
    width: 220
    fullRowSelect: true
    view: vwDetails
    
    ->columns->add (ComponentsColumn)

    DoubleClickEvent:^ function ($self) use (PropertiesList $props, LeftMenu__EventsList $list, Objects $objs, Designer $designer)
        {
            $component = substr ($self->selectedItems->offsetGet (0), 15, -1);
            $name      = "VoidEngine\\$component";
            $cname     = $component. abs (crc32 (microtime (true) . time ()));

            $obj = new $name ();
            VoidEngine::setProperty ($obj->selector, 'Parent', $designer->form, 'object');

            $obj->caption = $component;
            $props->selectedObject = $obj->selector;

            VoidStudioAPI::loadObjectEvents ($obj, $list);

            $objs->items->add ('['. $obj->selector .'] '. $component);
            $designer->addComponent ($obj, $cname);
        }

MenuItem Menu__project_build ():
    text: text ('Собрать')

    ClickEvent:^ function ($self)
        {
            $msg = new MessageBox ();
            $msg->show (text ('Рано ещё!'));
        }

MenuItem Menu__project ():
    text: text ('Проект')

    ->items->add (Menu__project_build)

MainMenu Menu ():
    ->items->add (Menu__project)

Form MainForm ():
    menu: Menu

    ShownEvent:^ function ($self) use (Log__List $log, Designer $designer)
        {
            VoidEngine::setProperty ($designer->form, 'Left', 280, 'int');
            VoidEngine::setProperty ($designer->form, 'Top', 0, 'int');

            // VoidEngine::setObjectEvent ($designer->form, 'Click', '');

            $time = round ((microtime (true) - $GLOBALS['__debug']['start_time']) / 1000, 4);

            $log->items->add (text ('VoidStudio запущен за '. ($time > 0 ? $time : '[мало]') .' секунд'));
        }