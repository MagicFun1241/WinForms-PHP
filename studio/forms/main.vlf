Form MainForm ():
    size: [$SCREEN->width / 1.2, $SCREEN->height / 1.2]
    windowState: fwsMaximized
    startPosition: fspCenterScreen
    backgroundColor: clWhite
    doubleBoffer: true
    formBorderStyle: bsFixedSingle

    caption: 'VoidStudio'

    ->icon->loadFromFile (STUDIO_DIR. '/Icon.ico')

TabPage Log__Page ():
    text: text ('Лог')

TabPage EvalTool_Page ():
    text: text ('Выполнение кода')

TabControl BottomPanel (MainForm):
    dock: dsBottom
    height: 160

    ->tabPages->addRange ([Log__Page, EvalTool_Page])

ListBox Log__List (Log__Page):
    dock: dsFill

    font: ['Microsoft Sans Serif', 9]

FastColoredTextBox EvalTool_Editor (EvalTool_Page):
    dock: dsFill

    language: langPHP
    wordWrap: true

Button EvalTool_Eval (EvalTool_Page):
    dock: dsBottom
    caption: text ('Выполнить')

    ClickEvent:^ function ($self) use (EvalTool_Editor $editor)
        {
            eval ($editor->text);
        }

Panel TopMenu__Panel (MainForm):
    dock: dsFill

TabPage TopMenu__Form1 ():
    text: 'Form1'

TabControl TopMenu (TopMenu__Panel):
    dock: dsFill

    ->tabPages->add (TopMenu__Form1)

Panel LeftMenu__Panel (MainForm):
    dock: dsLeft
    width: 280

TabPage LeftMenu__Properties ():
    text: text ('Свойства')

TabPage LeftMenu__Events ():
    text: text ('События')

TabControl LeftMenu (LeftMenu__Panel):
    dock: dsFill

    ->tabPages->addRange ([LeftMenu__Properties, LeftMenu__Events])

PropertyGrid PropertiesList (LeftMenu__Properties):
    dock: dsFill

VoidDesigner Form1Designer (TopMenu__Form1, PropertiesList):

ListBox LeftMenu__EventsList (LeftMenu__Events):
    dock: dsFill

    font: ['Microsoft Sans Serif', 9]

    DoubleClickEvent:^ function ($self) use (PropertiesList $propertyGrid)
        {
            if ($event = $self->selected)
                VoidStudioAPI::openEventEditor (Components::getComponent ($propertyGrid->selectedObject), $event);
        }

ComboBox Objects (LeftMenu__Panel):
    dock: dsTop
    dropDownStyle: ddDropDownList

    SelectedIndexChangedEvent:^ function ($self) use (PropertiesList $propertyGrid)
        {
            $item = $self->selectedItem;

            $propertyGrid->selectedObject = substr ($item, 1, strpos ($item, ']') - 1);
        }

    SelectionChangeCommittedEvent:^ function ($self) use (Form1Designer $designer)
        {
            $item = $self->selectedItem;

            VoidEngine::callMethod ($designer->selector, 'SetSelectedComponents', substr ($item, 1, strpos ($item, ']') - 1), 'object');
        }

TabControl TopMenu (TopMenu__Panel):
    SelectedEvent:^ function ($self) use (Objects $objs, TopMenu $menu)
        {
            $form = VoidEngine::getProperty ($menu->selectedTab, 'Text');

            $objs->items->clear ();
            $objs->items->addRange ($GLOBALS['forms'][$form]);
            $objs->selectedIndex = 0;
            
            VoidStudioAPI::$objects['main'][$form .'Designer']->focus ();
        }

%^  PropertiesList->selectedObject = Form1Designer->form->selector;
    Objects->items->add ('['. Form1Designer->form->selector .'] Form');

    $GLOBALS['forms']['Form1'][] = '['. Form1Designer->form->selector .'] Form';

ColumnHeader ComponentsColumn ():
    text: text ('Название компонента')
    width: 216

ListView ComponentsList (MainForm):
    dock: dsRight
    width: 220
    fullRowSelect: true
    view: vwDetails
    
    ->columns->add (ComponentsColumn)

    DoubleClickEvent:^ function ($self) use (PropertiesList $props, LeftMenu__EventsList $list, Objects $objs, Form1Designer $designer, TopMenu $menu)
        {
            if (!isset ($GLOBALS['lastFormNum']))
                $GLOBALS['lastFormNum'] = 1;

            $component = substr ($self->selectedItems->offsetGet (0), 15, -1);
            $name      = "VoidEngine\\$component";
            $cname     = $component. abs (crc32 (microtime (true) . time ()));

            if ($component == 'Form')
            {
                $page     = new TabPage ('Form'. (++$GLOBALS['lastFormNum']));
                $designer = new VoidDesigner ($page, $props);

                $designer->form->location = [0, 0];
                $designer->updateHost ();

                VoidStudioAPI::$objects['main']['Form'. $GLOBALS['lastFormNum'] .'Designer'] = $designer;
                $menu->tabPages->add ($page);

                $GLOBALS['forms']['Form'. $GLOBALS['lastFormNum']] = ['['. $designer->form->selector .'] Form'];
            }

            else
            {
                $form = VoidEngine::getProperty ($menu->selectedTab, 'Text');

                $obj = new $name ();
                VoidEngine::setProperty ($obj->selector, 'Parent', VoidStudioAPI::$objects['main'][$form .'Designer']->form->selector, 'object');

                $obj->caption = $component;
                $props->selectedObject = $obj->selector;

                VoidStudioAPI::loadObjectEvents ($obj, $list);

                $GLOBALS['forms'][$form][] = '['. $obj->selector .'] '. $component;

                $objs->items->clear ();
                $objs->items->addRange ($GLOBALS['forms'][$form]);

                $designer->addComponent ($obj, $cname);
            }
        }

MenuItem Menu__studio_restart ():
    text: text ('Перезапустить')

    ClickEvent:^ function ($self)
        {
            $APPLICATION->restart ();
        }

MenuItem Menu__studio_about ():
    text: text ('О программе')

    ClickEvent:^ function ($self)
        {
            $msg = new MessageBox ();
            $msg->show (text ("Авторы сие произведения:\n\nАндрей Курляндов (vk.com/postmessage) - главный разработчик\nНикита Подвирный (vk.com/technomindlp) - разработчик\n\nWinForms PHP, vk.com/winforms"), text ('О программе'));
        }

MenuItem Menu__project_build ():
    text: text ('Собрать')

    ClickEvent:^ function ($self)
        {
            $msg = new MessageBox ();
            $msg->show (text ('Рано ещё!'));
        }

MenuItem Menu__studio ():
    text: text ('Среда')

    ->items->addRange ([Menu__studio_restart, Menu__studio_about])

MenuItem Menu__project ():
    text: text ('Проект')

    ->items->add (Menu__project_build)

MainMenu Menu ():
    ->items->addRange ([Menu__studio, Menu__project])

Form MainForm ():
    menu: Menu

    ShownEvent:^ function ($self) use (Log__List $log, Form1Designer $designer)
        {
            $designer->form->location = [0, 0];
            $designer->updateHost ();

            $time = round ((microtime (true) - $GLOBALS['__debug']['start_time']) / 1000, 4);

            $log->items->add (text ('VoidStudio запущен за '. ($time > 0 ? $time : '[мало]') .' секунд'));
        }